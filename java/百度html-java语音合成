html语音合成

通过调用百度的java sdk来实现前端网页的语音合成

具体流程

用户-》post发送字符串-》springboot -》调用百度javasdk接口 -》转base64 -》return发回给前端 -》前端接收base64
-》放到audio标签中进行播放

具体代码
(前端html)
<div>
	<input id='in'>
	<button onclick='incc()'>合成</button>
	<audio controls="controls" src="" id='audis'/>
</div>
(前端js，必须加入："data:audio/mp3;base64,"+result  )
function incc(){
	var val = $("#in").val();
	console.log(val)
	$.post("/consumer/getWordToSpeech", {
		'context' : val
	}, function(result) {
		if (result != null && result.length != 0) {
            		$("#audis").attr("src","data:audio/mp3;base64,"+result);
		} else {
			$.myAlert("警告", "输入错误", "red", 2000);
		}
	});
}
（后端pm.xml文件)
<dependency>
		    <groupId>com.baidu.aip</groupId>
		    <artifactId>java-sdk</artifactId>
		    <version>3.4.1</version>
</dependency>
（后端Controller层)
@Autowired
private BaiduSpeechSynthesis pss;

@PostMapping("/consumer/getWordToSpeech")
public String getWordToSpeech(String context) throws JSONException {
	return pss.synthesisToBase64(context);
}

（后端BaiduSpeechSynthesis.java)
public class BaiduSpeechSynthesis {
    
    @Autowired
    private AipSpeech client;
    
    public void synthesisToMp3(String context,String path) throws JSONException {
    	HashMap<String, Object> options = new HashMap<String, Object>();
        options.put("spd", "5");
        options.put("pit", "5");
        options.put("per", "4");
        
        TtsResponse res = client.synthesis(context, "zh", 1, options);
        
        byte[] data = res.getData();
        JSONObject res1 = res.getResult();
        if (data != null) {
            try {
                Util.writeBytesToFileSystem(data, path);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        if (res1 != null) {
            System.out.println(res1.toString(2));
        }
    }
    
    public byte[] synthesisToByteArray(String context) throws JSONException {
    	
    	HashMap<String, Object> options = new HashMap<String, Object>();
        options.put("spd", "5");
        options.put("pit", "5");
        options.put("per", "4");
        
        TtsResponse res = client.synthesis(context, "zh", 1, options);
		return res.getData();
    }
    
    public static byte[] byteMerger(byte[] byte_1, byte[] byte_2,int byteread){
		byte[] byte_3 = new byte[byte_1.length+byteread];
		System.arraycopy(byte_1, 0, byte_3, 0, byte_1.length);
		System.arraycopy(byte_2, 0, byte_3, byte_1.length, byteread);
		return byte_3;
	}

    
    
    @SuppressWarnings("restriction")
	public String synthesisToBase64(String context) throws JSONException{	
		return new BASE64Encoder().encode(this.synthesisToByteArray(context));
    }	
}

（后端bean beanconfig）
public static final String APP_ID = "你的APP_ID";
public static final String API_KEY = "你的API_KEY";
public static final String SECRET_KEY = "你的SECRET_KEY";
	
@Bean
public AipSpeech getAipSpeech() {
	return new AipSpeech(APP_ID, API_KEY, SECRET_KEY);
}
	
@Bean
public BaiduSpeechSynthesis getBaiduSpeechSynthesis() {
	return new BaiduSpeechSynthesis();
}








